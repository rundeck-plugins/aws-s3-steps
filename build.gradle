buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.18.17'
}

ext.pluginName = 'AWS S3 Steps'
ext.pluginDescription = "Simple shell wrapper around aws s3 CLI to expose subcommands as node steps"
ext.sopsCopyright = "Â© 2017, Rundeck, Inc."
ext.sopsUrl = "http://rundeck.com"
ext.buildDateString=new Date().format("yyyy-MM-dd'T'HH:mm:ssX")
ext.archivesBaseName = "aws-s3-steps"
ext.pluginBaseFolder = "."

scmVersion {
    ignoreUncommittedChanges = true
    tag {
        prefix = ''
        versionSeparator = ''
    }
}

project.version = scmVersion.version
ext.archiveFilename = ext.archivesBaseName + '-' + version 

import org.apache.tools.ant.filters.ReplaceTokens

defaultTasks 'build'

task pluginZip(type: Jar) {
    archiveBaseName = project.ext.archivesBaseName
    archiveVersion = project.version
    archiveClassifier = ''
    archiveExtension = 'zip'
    destinationDirectory = file("build/libs")

    from("${project.buildDir}/zip-contents") {
        include("*.yaml")
        include("resources/**")
        include("contents/*")
        into(archivesBaseName + '-' + version)
    }

    manifest {
        attributes 'Rundeck-Plugin-Name': pluginName.toString(),
                   'Rundeck-Plugin-Description': pluginDescription.toString(),
                   'Rundeck-Plugin-Archive': 'true',
                   'Rundeck-Plugin-File-Version': version,
                   'Rundeck-Plugin-Author': sopsCopyright,
                   'Rundeck-Plugin-URL': sopsUrl,
                   'Rundeck-Plugin-Date': buildDateString
    }
}

pluginZip.doFirst {
    def assetsMap = new Properties()
    def tokens = assetsMap + [
            version    : version,
            date       : new Date().format("yyyy-MM-dd'T'HH:mm:ssX").toString(),
            author     : sopsCopyright,
            url        : sopsUrl,
            title      : pluginName,
            description: pluginDescription,
            name       : archivesBaseName.toString(),
    ]

    copy {
        from("${project.projectDir}/resources"){
            include '**/*'
            into "resources"
        }

        from("${project.projectDir}/contents"){
            into "contents"
        }

        from("${project.projectDir}/plugin.yaml") {
            filter(ReplaceTokens, tokens: tokens)
            exclude '**/*.png'
        }

        into "${project.buildDir}/zip-contents"
    }
}

apply plugin: 'maven-publish'

publishing {
    publications {
        mavenZip(MavenPublication) {
            artifact pluginZip
        }
    }
}

defaultTasks 'clean', 'build','pluginZip'

task build(dependsOn: ['pluginZip']) {
}

task install(dependsOn: ['build','publishToMavenLocal']) {
}

task clean(type: Delete) {
    delete('build')
}
